{"version":3,"sources":["theme/theme.js","componentes/seguridad/Tool/style.js","servicios/HttpCliente.js","componentes/seguridad/RegistrarUsuario.js","actions/UsuarioAction.js","componentes/seguridad/Login.js","componentes/seguridad/PerfilUsuario.js","componentes/navegacion/bar/BarSesion.js","componentes/navegacion/AppNavbar.js","App.js","serviceWorker.js","index.js","logo.svg"],"names":["theme","createMuiTheme","palette","primary","light","main","dark","contrastText","style","paper","marginTop","display","flexDirection","alignItems","form","width","submit","avatar","margin","backgroundColor","height","icon","fontSize","Axios","defaults","baseURL","interceptors","request","use","config","token_seguridad","window","localStorage","getItem","headers","Authorization","error","Promise","reject","requestGenerico","get","url","post","body","put","delete","RegistrarUsuario","useState","nombreCompleto","email","username","password","Confirmacionpassword","usuario","setUsuario","ingresarValoresMemoria","e","target","name","value","anterior","Container","component","maxWidth","justify","Typography","variant","Grid","container","spacing","item","xs","md","TextField","onChange","fullWidth","label","type","Button","onClick","preventDefault","resolve","eject","HttpCliente","then","response","registrarUsuario","console","log","setItem","data","token","alert","color","size","Login","Avatar","loginUsuario","PerfilUsuario","useEffect","actualizarUsuario","useStyles","makeStyles","seccionDesktop","breakpoints","up","seccionMobile","grow","flexGrow","avatarSize","BarSesion","classes","Toolbar","IconButton","className","src","Fotoprueba","AppNavBar","AppBar","position","App","exact","path","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message","module","exports"],"mappings":"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","file":"static/js/main.ca721db6.chunk.js","sourcesContent":["import {createMuiTheme} from '@material-ui/core/styles'\r\n\r\nconst theme = createMuiTheme({\r\n    palette:{\r\n        primary: {\r\n            light: \"#63a4fff\",\r\n            main: \"#1976d2\",\r\n            dark: \"#004ba0\",\r\n            contrastText: \"#ecfad8\"\r\n\r\n        }\r\n    },\r\n});\r\n\r\nexport default theme;","const style = {\r\n    paper: {\r\n        marginTop: 8,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: \"100%\",\r\n        marginTop: 20\r\n    },\r\n    submit: {\r\n        marginTop: 15\r\n    },\r\n    avatar:{\r\n        margin: 5,\r\n        backgroundColor: \"#1976d2\",\r\n        width: 60,\r\n        height:60\r\n    },\r\n    icon: {\r\n        fontSize: 40\r\n    }\r\n};\r\n\r\nexport default style;","import Axios from \"axios\";\r\n\r\nAxios.defaults.baseURL = 'https://localhost:44335/api'\r\n\r\nAxios.interceptors.request.use((config) => {\r\n    const token_seguridad = window.localStorage.getItem('token_seguridad');\r\n    if(token_seguridad){\r\n        config.headers.Authorization = 'bearer ' + token_seguridad;\r\n        return config;\r\n    }\r\n},error => {\r\n return Promise.reject(error);\r\n});\r\n\r\nconst requestGenerico = {\r\n    get: (url) => Axios.get(url),\r\n    post: (url, body) => Axios.post(url,body),\r\n    put: (url, body) => Axios.put(url,body),\r\n    delete: (url) => Axios.delete(url)\r\n};\r\n\r\nexport default requestGenerico;","import React, { useState } from \"react\";\r\nimport { Container, Typography, Grid, TextField, Button } from \"@material-ui/core\";\r\nimport style from \"./Tool/style\";\r\nimport { registrarUsuario } from \"../../actions/UsuarioAction\";\r\n\r\nconst RegistrarUsuario = () =>{\r\n\r\n    const [usuario, setUsuario] = useState({\r\n        nombreCompleto: \"\",\r\n        email: \"\",\r\n        username: \"\",\r\n        password: \"\",\r\n        Confirmacionpassword: \"\"\r\n\r\n\r\n    })\r\n\r\n    const ingresarValoresMemoria = e =>{\r\n        const {name, value} = e.target;\r\n        setUsuario(anterior => ({\r\n            ...anterior,\r\n            [name]: value  \r\n        }))\r\n    }\r\n\r\n    const RegistrarUsuarioBoton = e =>{\r\n        e.preventDefault();\r\n        registrarUsuario(usuario).then(response => {\r\n            console.log(\"se registro el usuario correctamente\",response);\r\n            window.localStorage.setItem(\"token_seguridad\", response.data.token);\r\n            alert(\"se registro el usuario correctamente\")\r\n        })\r\n        \r\n    }\r\n\r\n\r\n    return(\r\n        <Container component='main' maxWidth = 'md' justify = 'center'>\r\n            <div style={style.paper}>\r\n                <Typography component='h1' variant=\"h5\">\r\n                    Registro de usuario\r\n                </Typography>\r\n                <form style={style.form}>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={12} md={12}>\r\n                            <TextField name=\"nombreCompleto\" value={usuario.nombreCompleto} onChange={ingresarValoresMemoria} variant=\"outlined\" fullWidth label='Ingrese su nombre completo'></TextField>\r\n                        </Grid>\r\n                        <Grid item xs={12} md={6}>\r\n                            <TextField name=\"email\" value={usuario.email} onChange={ingresarValoresMemoria} variant=\"outlined\" fullWidth label='Ingrese su email'></TextField>\r\n                        </Grid>\r\n                        <Grid item xs={12} md={6}>\r\n                            <TextField name=\"username\" value={usuario.username} onChange={ingresarValoresMemoria} variant=\"outlined\" fullWidth label='Ingrese su username'></TextField>\r\n                        </Grid>\r\n                        <Grid item xs={12} md={6}>\r\n                            <TextField name=\"password\" type=\"password\" value={usuario.password} onChange={ingresarValoresMemoria} variant=\"outlined\" fullWidth label='Ingrese su password'></TextField>\r\n                        </Grid>\r\n                        <Grid item xs={12} md={6}>\r\n                            <TextField name=\"Confirmacionpassword\" type=\"password\" value={usuario.Confirmacionpassword} onChange={ingresarValoresMemoria} variant=\"outlined\" fullWidth label='Confirme su password'></TextField>\r\n                        </Grid>\r\n                        \r\n                    </Grid>\r\n                      <Grid container justify=\"center\">\r\n                            <Grid item xs={12} md={6}>\r\n                                <Button type=\"submit\" onClick={RegistrarUsuarioBoton} fullWidth variant=\"contained\" color=\"primary\" size=\"large\" style={style.submit}>\r\n                                    Enviar\r\n                                </Button>\r\n                            </Grid>\r\n                      </Grid>\r\n\r\n                </form>\r\n            </div>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default RegistrarUsuario;","import HttpCliente from '../servicios/HttpCliente'\r\n\r\nexport const registrarUsuario = usuario =>{\r\n    return new Promise((resolve, eject) =>{\r\n        HttpCliente.post('/Usuario/registrar',usuario).then(response =>{\r\n            resolve(response);\r\n        })\r\n    })\r\n}\r\n\r\nexport const obtenerUsuarioActual = () => {\r\n    return new Promise((resolve, eject) => {\r\n        HttpCliente.get('/Usuario').then(response => {\r\n            resolve(response);\r\n        })\r\n    })\r\n}\r\n\r\nexport const actualizarUsuario = usuario =>{\r\n    return new Promise((resolve, eject) => {\r\n        HttpCliente.put('/Usuario',usuario).then(response => {\r\n            resolve(response);\r\n        })\r\n    })\r\n}\r\n\r\n/*export const loginUsuario = (usuario) => {\r\n    return new Promise((resolve, reject) => {\r\n        HttpCliente.post(\"/Usuario/login\", usuario)\r\n            .then(response => {\r\n                resolve(response);\r\n            })\r\n            .catch(error => {\r\n                reject(error);\r\n            });\r\n    });\r\n};*/\r\n\r\nexport const loginUsuario = (usuario) =>{\r\n    return new Promise((resolve, eject) => {\r\n        HttpCliente.post(\"/Usuario/login\",usuario).then(response => {\r\n            resolve(response);\r\n        }) \r\n    })\r\n}","import React, {useState} from \"react\";\r\nimport style from \"./Tool/style\";\r\nimport { Container, Avatar, Typography, TextField, Button } from \"@material-ui/core\";\r\nimport LockOpenOutlinedIcon from \"@material-ui/icons/LockOpenOutlined\"\r\nimport { loginUsuario } from \"../../actions/UsuarioAction\";\r\n\r\nconst Login = () =>{\r\n\r\n    const [usuario,setUsuario] = useState({\r\n        email: \"\",\r\n        password: \"\"\r\n    })\r\n\r\n    const ingresarValoresMemoria = e => {\r\n        const {name,value} = e.target;\r\n        setUsuario(anterior => ({\r\n            ...anterior,\r\n            [name]: value\r\n        }))\r\n    }\r\n\r\n    \r\n    const loginUsuarioBoton = e =>{\r\n        e.preventDefault();\r\n        loginUsuario(usuario).then(response => {\r\n            console.log(\"login exitoso\", response);\r\n            window.localStorage.setItem('token_seguridad',response.data.token)\r\n            alert(\"login exitoso\");\r\n        })\r\n    }\r\n\r\n\r\n    return(\r\n        <Container maxWidth=\"xs\">\r\n            <div style={style.paper}>\r\n                <Avatar style={style.avatar}>\r\n                    <LockOpenOutlinedIcon style={style.icon}></LockOpenOutlinedIcon>\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Login de usuario\r\n                </Typography>\r\n                <form style={style.form}>\r\n                    <TextField name=\"email\" value={usuario.email} onChange={ingresarValoresMemoria}  variant=\"outlined\" label=\"Ingrese su email\" fullWidth margin=\"normal\"></TextField>\r\n                    <TextField name=\"password\" value={usuario.password} onChange={ingresarValoresMemoria} variant=\"outlined\" type=\"password\" label=\"password\"  fullWidth margin=\"normal\"></TextField>\r\n                    <Button type=\"submit\" onClick={loginUsuarioBoton} fullWidth variant=\"contained\" color=\"primary\" style={style.submit}>\r\n                        Enviar\r\n                    </Button>\r\n                </form>\r\n\r\n            </div>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Login;","import React, { useState, useEffect } from \"react\";\r\nimport style from \"./Tool/style\";\r\nimport { Container, Typography, Grid, TextField, Button } from \"@material-ui/core\";\r\nimport { obtenerUsuarioActual, actualizarUsuario } from \"../../actions/UsuarioAction\";\r\n\r\nconst PerfilUsuario = () =>{\r\n\r\n    const [usuario, setUsuario] = useState({\r\n        nombreCompleto: \"\",\r\n        email: \"\",\r\n        password: \"\", // Inicializar con una cadena vacía en lugar de undefined\r\n        Confirmacionpassword: \"\",\r\n        username: \"\"\r\n\r\n\r\n    })\r\n\r\n    const ingresarValoresMemoria = e => {\r\n        const {name, value} = e.target;\r\n        setUsuario(anterior => ({\r\n            ...anterior,\r\n            [name] : value\r\n        }));\r\n    }\r\n\r\n    useEffect(() => {\r\n        obtenerUsuarioActual().then(response => {\r\n            console.log(\"esta es la data del usuario\", response);\r\n            setUsuario(response.data);\r\n        });\r\n    },[])\r\n\r\n    const guardarUsuario = e =>{\r\n        e.preventDefault();\r\n        actualizarUsuario(usuario).then(response => {\r\n            console.log(\"se actualizo el usuario\",response)\r\n            alert(\"se actualizo el usuario\");\r\n            window.localStorage.setItem(\"token_seguridad\", response.data.token)\r\n        })\r\n    }\r\n\r\n    \r\n    return(\r\n        <Container component=\"main\" maxWidth=\"md\" justify=\"center\" >\r\n            <div style={style.paper}>\r\n              <Typography component=\"h1\" variant=\"h5\">\r\n                Perfil usuario\r\n              </Typography>\r\n            </div>\r\n            <form style={style.form}>\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={12} md={12}>\r\n                        <TextField name=\"nombreCompleto\" value={usuario.nombreCompleto} onChange={ingresarValoresMemoria} variant=\"outlined\" fullWidth label=\"Ingrese su nombre\"></TextField>\r\n                    </Grid>\r\n                    <Grid item xs={12} md={6}>\r\n                        <TextField name=\"username\" value={usuario.username} onChange={ingresarValoresMemoria} variant=\"outlined\" fullWidth label=\"Ingrese su username\"></TextField>\r\n                    </Grid>\r\n                    <Grid item xs={12} md={6}>\r\n                        <TextField name=\"email\" value={usuario.email} onChange={ingresarValoresMemoria} variant=\"outlined\" fullWidth label=\"Ingrese su email\"></TextField>\r\n                    </Grid>\r\n                    <Grid item xs={12} md={6}>\r\n                        <TextField name=\"password\" value={usuario.password} onChange={ingresarValoresMemoria} type=\"password\" variant=\"outlined\" fullWidth label=\"Ingrese su contraseña\"></TextField>\r\n                    </Grid>\r\n                    <Grid item xs={12} md={6}>\r\n                        <TextField name=\"Confirmacionpassword\" value={usuario.Confirmacionpassword} onChange={ingresarValoresMemoria} type=\"password\" variant=\"outlined\" fullWidth label=\"confirme su contraseña\"></TextField>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container justify=\"center\">\r\n                    <Grid item xs={12} md={6}>\r\n                        <Button type=\"submit\" onClick={guardarUsuario} fullWidth variant=\"contained\" size=\"large\" color=\"primary\" style={style.submit}>\r\n                            Guardar Datos\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </form>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default PerfilUsuario;","import React from \"react\";\r\nimport { Avatar, Button, IconButton, Toolbar, Typography, makeStyles } from \"@material-ui/core\";\r\nimport Fotoprueba from \"../../../logo.svg\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) =>({\r\n    seccionDesktop:{\r\n        display: \"none\",\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            display: \"flex\"\r\n        }\r\n    },\r\n\r\n    seccionMobile: {\r\n        display: \"flex\",\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            display: \"none\"\r\n        }\r\n\r\n    },\r\n\r\n    grow: {\r\n        flexGrow: 1\r\n\r\n    },\r\n    avatarSize: {\r\n        width: 40,\r\n        height: 40\r\n\r\n    }\r\n}))\r\nconst BarSesion = () =>{\r\n    const classes = useStyles();\r\n\r\n    return(\r\n        <Toolbar>\r\n            <IconButton color=\"inherit\">\r\n                <i className=\"material-icons\">menu</i>\r\n            </IconButton>\r\n            <Typography variant=\"h6\">Cursos Online</Typography>\r\n            <div className={classes.grow}></div>\r\n             <div className={classes.seccionDesktop}>\r\n             <Button color=\"inherit\">\r\n                Salir\r\n            </Button>\r\n            <Button color=\"inherit\">\r\n                {\"Nombre de usuario\"}\r\n            </Button>\r\n            <Avatar src={Fotoprueba}></Avatar>\r\n             </div>\r\n\r\n             <div className={classes.seccionMobile}>\r\n                <IconButton color=\"inherit\">\r\n                    <i className=\"material-icons\">more_vert</i>\r\n                </IconButton>\r\n\r\n             </div>\r\n        </Toolbar>\r\n    );\r\n};\r\n\r\nexport default BarSesion;","import React from \"react\";\r\nimport { AppBar } from \"@material-ui/core\";\r\nimport BarSesion from \"./bar/BarSesion\";\r\n\r\nconst AppNavBar = () =>{\r\n    return(\r\n        <AppBar position='static'>\r\n            <BarSesion></BarSesion>\r\n        </AppBar>\r\n    );\r\n};\r\n\r\nexport default AppNavBar;","import React from 'react';\nimport { MuiThemeProvider } from '@material-ui/core/styles';\nimport theme from './theme/theme.js';\nimport RegistrarUsuario from './componentes/seguridad/RegistrarUsuario.js';\nimport Login from './componentes/seguridad/Login.js'\nimport PerfilUsuario from './componentes/seguridad/PerfilUsuario.js';\n/*import { BrowserRouter as Router ,Switch } from 'react-router-dom/cjs/react-router-dom.min.js';*/\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { Grid } from '@material-ui/core';\nimport AppNavBar from './componentes/navegacion/AppNavbar.js';\n\nfunction App() {\n  return (\n    <Router>\n      <MuiThemeProvider theme={theme}>\n        <AppNavBar></AppNavBar>\n        <Grid container>\n          <Switch>\n            <Route exact path =\"/auth/login\" component={Login}></Route>\n            <Route exact path =\"/auth/registrar\" component={RegistrarUsuario}></Route>\n            <Route exact path =\"/\" component={PerfilUsuario}></Route>\n          </Switch>\n        </Grid>\n      </MuiThemeProvider>\n    </Router>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM  from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}